<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huaxia.tongyong.dao.EmployeeMapper">

    <!--实体映射-->
    <resultMap id="BaseResultMap" type="com.huaxia.tongyong.model.Employee">
        <!--自增主键-->
        <id property="id" column="id"/>
        <!--员工姓名-->
        <result property="employeeName" column="employee_name"/>
        <!--员工密码-->
        <result property="employeePassword" column="employee_password"/>
        <!--员工手机号码-->
        <result property="employeeMobile" column="employee_mobile"/>
        <!--员工号-->
        <result property="employeeNo" column="employee_no"/>
        <!--角色id-->
        <result property="roleId" column="role_id"/>
        <!--入职时间-->
        <result property="inductionTime" column="induction_time"/>
        <!--员工状态：1：在职，2休假，3：离职-->
        <result property="employeeStatus" column="employee_status"/>
        <!--创建时间-->
        <result property="createTime" column="create_Time"/>
        <!--更新时间-->
        <result property="updateTime" column="update_Time"/>
        <!--是否可用：1：正常状态，0：删除-->
        <result property="isActive" column="is_active"/>
        <!--删除状态：1：正常状态，0：删除-->
        <result property="deleteStatus" column="delete_Status"/>
        <!--排班设置:1早班，2：晚班 0：无排班设置-->
        <result property="shiftsNo" column="shifts_no"/>
    </resultMap>


    <!-- 通用查询结果列-->
    <sql id="Base_Column_List">
        id, employee_name, employee_password, employee_mobile, employee_no, role_id, induction_time, employee_status, create_Time, update_Time, is_active, delete_Status,shifts_no
    </sql>


    <!-- 添加 （匹配有值的字段）-->
    <insert id="insertSelective" parameterType="com.huaxia.tongyong.model.Employee">
        INSERT INTO t_employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="employeeName != null">
                employee_name,
            </if>
            <if test="employeePassword != null">
                employee_password,
            </if>
            <if test="employeeMobile != null">
                employee_mobile,
            </if>
            <if test="employeeNo != null">
                employee_no,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="inductionTime != null">
                induction_time,
            </if>
            <if test="employeeStatus != null">
                employee_status,
            </if>
            <if test="createTime != null">
                create_Time,
            </if>
            <if test="updateTime != null">
                update_Time,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="deleteStatus != null">
                delete_Status,
            </if>
            <if test="shiftsNo !=null">
                shifts_no
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="employeeName!=null">
                #{employeeName},
            </if>
            <if test="employeePassword!=null">
                #{employeePassword},
            </if>
            <if test="employeeMobile!=null">
                #{employeeMobile},
            </if>
            <if test="employeeNo!=null">
                #{employeeNo},
            </if>
            <if test="roleId!=null">
                #{roleId},
            </if>
            <if test="inductionTime!=null">
                #{inductionTime},
            </if>
            <if test="employeeStatus!=null">
                #{employeeStatus},
            </if>
            <if test="createTime!=null">
                #{createTime},
            </if>
            <if test="updateTime!=null">
                #{updateTime},
            </if>
            <if test="isActive!= null">
                #{isActive} ,
            </if>
            <if test="deleteStatus!=null">
                #{deleteStatus},
            </if>
            <if test="shiftsNo!=null">
                #{shiftsNo}
            </if>
        </trim>
    </insert>

    <!-- 修 改-->
    <update id="updateByPrimaryKeySelective" parameterType="com.huaxia.tongyong.model.Employee">
        UPDATE t_employee
        <set>
            <if test="employeeName != null">
                employee_name = #{employeeName},
            </if>
            <if test="employeePassword != null">
                employee_password = #{employeePassword},
            </if>
            <if test="employeeMobile != null">
                employee_mobile = #{employeeMobile},
            </if>
            <if test="employeeNo != null">
                employee_no = #{employeeNo},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="inductionTime != null">
                induction_time = #{inductionTime},
            </if>
            <if test="employeeStatus != null">
                employee_status = #{employeeStatus},
            </if>
            <if test="createTime != null">
                create_Time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_Time = #{updateTime},
            </if>
            <if test="isActive != null">
                is_active=#{isActive},
            </if>
            <if test="deleteStatus != null">
                delete_Status = #{deleteStatus},
            </if>
            <if test="shiftsNo!=null">
                shifts_no = #{shiftsNo},
            </if>
        </set>
        WHERE id = #{id}
    </update>
    <select id="selectEmployeeForLogin" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        t_employee
        WHERE
        employee_no = #{employeeNo}
        AND employee_password = #{password} and is_active=1 and delete_Status=1
    </select>

    <select id="selectUserPermissionVo" resultType="com.huaxia.tongyong.model.Employee">
        SELECT
            e.employee_name AS userName,
            e.employee_no   AS employeeNo,
            r.id            AS roleId,
            r.role_name     AS roleName
        FROM
            t_employee e
            LEFT JOIN t_role r ON e.role_id = r.id
        WHERE
            e.id = #{userId}
    </select>
    <!--<select id="selectEmployeeVoByUserParam" resultType="com.xiaofan.car.persistence.vo.EmployeeVo"
            parameterType="com.xiaofan.car.persistence.param.UserQueryParam">
        SELECT
        t_employee.id as id,
        t_employee.role_id as roleId,
        employee_name as employeeName,
        employee_mobile as employeeMobile,
        employee_no as employeeNO,
        DATE_FORMAT(induction_time,'%Y-%m-%d %T') as inductionTime,
        employee_status as employStatus,
        role_name as roleName,
        is_active as isActive,
        t_employee.shifts_no shiftsNo
        FROM
        t_employee
        LEFT JOIN
        t_role on t_employee.role_id=t_role.id
        <where>
            and delete_Status=1
            <if test="roleId != null and roleId != 0">
                AND role_id = #{roleId}
            </if>
            <if test="userName !=null and userName!=''">
                and employee_name like CONCAT('%',#{userName},'%')
            </if>
            <if test="employeeNo !=null and employeeNo!=''">
                and employee_no like CONCAT('%',#{employeeNo},'%')
            </if>
        </where>
    </select>-->
    <select id="selectEmployeeForUpdatePwd" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        t_employee
        WHERE
        id = #{id} and employee_password=#{oldPwd}
    </select>
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        t_employee
        WHERE
        id = #{id}
    </select>
</mapper>